
@{ ViewData["Title"] = "Index";
    var _year = DateTime.Now.Year;
    var _month = DateTime.Now.Month;
    var _day = DateTime.Now.Day;
}
<style>
    .dx-textarea .dx-texteditor-input {
        min-height: 15rem;
    }
    .dx-scheduler-appointment-title{
        text-align:left;
    }
</style>
<main>
    <div class="row">
        <div class="col-12 text-right mt-3">
            <div id="scheduler"></div>
        </div>
    </div>
</main>

        @section scripts
{
            <script>

                function showToast(event, value, type) {
                    DevExpress.ui.notify(`${event} "${value}" `, type, 800);
                }
                DevExpress.localization.locale(navigator.language);
                var customerNamePublic = "";
                var nowt = new Date();
                meet();                
                function meet() {
                    $.ajax({
                        timeZone: 'Turkey',
                        type: "GET",
                        url: "/api/getMeetings",
                        contentType: "application/json",
                        dataType: "json",
                        success: function (data) {
                            var meetingsObj = data.meetings;
                            var customersObj = data.customer;
                            var usersObj = data.responsibleMeetings;

                            
                            $(() => {
                                $('#scheduler').dxScheduler({
                                    dataSource: meetingsObj,
                                    views: ['month', 'week', 'agenda'],
                                    currentView: 'month',
                                    currentDate: nowt,
                                    startDayHour: 8,
                                    endDayHour: 18,
                                    showAllDayPanel: false,
                                    allDay: false,
                                    height: 700,
                                    onAppointmentAdded(e) {
                                        $.ajax({
                                            type: "POST",
                                            url: "/api/addMeetings",
                                            data: JSON.stringify(e.appointmentData),
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (response) {
                                                nowt = e.appointmentData.endDate;
                                                showToast('Oluşturuldu', e.appointmentData.text, 'success');
                                                meet();
                                            },
                                            failure: function (response) {
                                                alert("Kayıt başarısız! - Failure response");
                                            },
                                            error: function (response) {
                                                alert("Kayıt başarısız! - Error response");
                                            }
                                        });

                                    },
                                    onAppointmentUpdated(e) {
                                        showToast('Güncellendi', e.appointmentData.text, 'info');
                                        console.log(e.appointmentData);
                                        $.ajax({
                                            type: "POST",
                                            url: "/api/updateMeetings",
                                            data: JSON.stringify(e.appointmentData),
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (response) {
                                                nowt = e.appointmentData.endDate;
                                                showToast('Güncellendi', e.appointmentData.text, 'info');
                                                meet();
                                            },
                                            failure: function (response) {
                                                alert("Kayıt başarısız! - Failure response");
                                            },
                                            error: function (response) {
                                                alert("Kayıt başarısız! - Error response");
                                            }
                                        });
                                    },
                                    onAppointmentDeleted(e) {
                                        showToast('Silindi', e.appointmentData.text, 'error');
                                        $.ajax({
                                            type: "POST",
                                            url: "/api/removeMeetings",
                                            data: JSON.stringify(e.appointmentData),
                                            contentType: "application/json; charset=utf-8",
                                            dataType: "json",
                                            success: function (response) {
                                                nowt = e.appointmentData.endDate;
                                                showToast('Silindi', e.appointmentData.text, 'error');
                                                meet();
                                            },
                                            failure: function (response) {
                                                alert("Kayıt başarısız! - Failure response");
                                            },
                                            error: function (response) {
                                                alert("Kayıt başarısız! - Error response");
                                            }
                                        });
                                    },

                                    onAppointmentFormOpening(data) {
                                        const { form } = data;
                                        form.option('items', [{
                                            label: {
                                                text: 'Konu',
                                            },
                                            editorType: 'dxTextBox',
                                            dataField: 'text',
                                            isRequired: true,
                                            editorOptions: {
                                                width: '100%',
                                                type: 'text',
                                            },
                                        }, {
                                            label: {
                                                text: 'Firma',
                                            },
                                            editorType: 'dxSelectBox',
                                            dataField: 'customersId',
                                            isRequired: true,
                                            editorOptions: {
                                                items: customersObj, placeholder: customersObj[0].text,
                                                displayExpr: 'text',
                                                valueExpr: 'id',
                                            },
                                        }, {
                                            colSpan: 2,
                                            label: {
                                                text: 'Kişiler',
                                            },
                                            editorType: 'dxTagBox',
                                            isRequired: true,
                                            dataField: 'userId',
                                            editorOptions: {
                                                items: usersObj, placeholder: usersObj[0].text,
                                                searchEnabled: true,
                                                displayExpr: 'text',
                                                valueExpr: 'userId',
                                            },
                                        }, {
                                            label: {
                                                text: 'Başlangıç Tarih',
                                            },
                                            dataField: 'startDate',
                                            editorType: 'dxDateBox',
                                            editorOptions: {
                                                width: '100%',
                                                type: 'datetime',
                                            },
                                        }, {
                                            label: {
                                                text: 'Bitiş Tarih',
                                            },
                                            dataField: 'endDate',
                                            editorType: 'dxDateBox',
                                            editorOptions: {
                                                width: '100%',
                                                type: 'datetime',
                                            },
                                        }, {
                                            colSpan: 2,
                                            label: {
                                                text: 'Açıklama',
                                            },
                                            dataField: 'description',
                                            editorType: "dxTextArea",
                                            editorOptions: {
                                                width: '100%',
                                            },
                                        },
                                        ]);
                                    },
<<<<<<< HEAD
=======
                                    appointmentTemplate(model) {
                                        var customerid = model.targetedAppointmentData.customersId;
                                        data.customer.forEach(customerFunc);
                                        function customerFunc(item, index) {
                                            if (customerid == item.id) {
                                                subject = item.text;
                                            }
                                        }
                                        return $(`${"<div class='showtime-preview'>"
                                            + '<div>'}${model.targetedAppointmentData.text} - ${subject}</div>`
                                            + '</div>');
                                    },
                                    /*appointmentTemplate(model) {
    
                                        return $(`${"<div class='movie'>"
                                            + "<img src='"}' />`
                                            + `<div class='movie-text'></div>`
                                            + '</div>');
                                    },*/
>>>>>>> 908055d269205e5f90321e945e19f6feddfb3e1a
                                }).dxScheduler('instance');
                            });
                        }
                    });
                }
            </script>
        }
